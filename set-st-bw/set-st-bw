#!/bin/bash
#
# Copyright 2015 Williamson Street Grocery Cooperative
#
# This is free software; you can redistribute it and/or modify it under the
# terms of the GNU General Public License version 3 as published by the Free
# Software Foundation.
#
# Requires:
# jq - https://stedolan.github.io/jq/
# curl

## Configurables:
CONFIGFILE=/etc/syncthing/set-st-bw.cfg
JQPATH=`which jq`
CURLPATH=`which curl`
##

VERBOSE=0
DONOTWRITE=0

function bail() {
  echo ERROR: "$*"
  exit 1
}

function usage() {
  echo "USAGE: $0 -nv -c CONFIGFILE -d DOWN-RATE -u UP-RATE "
  echo "  -c Path to configuration file."
  echo "  -n Make no changes, only print the current settings."
  echo "  -d Set maxRecvKbps. Not required if -n is used."
  echo "  -u Set maxSendKbps. Not required if -n is used."
  echo "  -v Verbose output. Useful only for troubleshooting."
}

while getopts 'd:u:c:nv' OPT
do
  case $OPT in
    d)
      DOWN=".[].options.maxRecvKbps=$OPTARG|"
    ;;
    u)
      UP=".[].options.maxSendKbps=$OPTARG|"
    ;;
    n)
      DONOTWRITE=1
    ;;
    v)
      VERBOSE=1
    ;;     
    c)
      CONFIGFILE="$OPTARG" 
    ;;         
    ?)
      usage
      bail "Unknown option: $OPT"
    ;;
  esac
done

if [ "$DONOTWRITE" -eq 0 ] ; then
  if [ -z "$DOWN" -a -z "$UP" ] ; then
    usage
    bail "The -d and/or -u options are required"
  fi
fi

if [ ! -r "$CONFIGFILE" ] ; then
  bail "Unable to read configuration: $CONFIGFILE"
fi

. $CONFIGFILE

tmpcfg1=`tempfile`
tmpcfg2=`tempfile`
cooks=`tempfile`

CURLCMD="$CURLPATH --cookie-jar $cooks -s --retry 5"

if [ "$VERBOSE" -eq 1 ] ; then
  CURLCMD="$CURLCMD -v "
fi

if [ "$INSECURE" -eq 1 ] ; then
  CURLCMD="$CURLCMD --insecure "
fi


$CURLCMD -o $tmpcfg1 $URL/rest/system/config \
  || bail "CURL error $?. Unable to download config"

if [ "$DONOTWRITE" = 1 ] ; then
  echo -n maxRecvKbps=
  $JQPATH -s  ".[].options.maxRecvKbps"  $tmpcfg1 \
    || bail "Unable to read config"
  echo -n maxSendKbps=
  $JQPATH -s  ".[].options.maxSendKbps"  $tmpcfg1 \
    || bail "Unable to read config"
else
  $JQPATH -s  "$DOWN$UP.[0]"  $tmpcfg1 > $tmpcfg2 \
    || bail "Unable to alter JSON config"
  $CURLCMD -d @$tmpcfg2 -H "X-API-Key: $APIKEY"  $URL/rest/system/config \
    || bail "CURL error $?. Unable to update JSON config on server" 
  
  res=`$CURLCMD -d '' -H "X-API-Key: $APIKEY"  $URL/rest/system/restart ` \
    || bail "CURL error $?. Unable to update JSON config on server" 
  [ "$VERBOSE" -eq 1 ] && echo RESULT=$res
fi


rm -f $tmpcfg1 $tmpcfg2 $cooks


